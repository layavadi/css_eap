name: Cloudera Semantic Search RAG Demo with MLTool  with CML Embedding engine 
description: |
    This is RAG demo using Cloudera Semantic search for vectore store for embeddings and running the embedding model in CSS with LLM running Cloudera AII. CSS runs the MLTool to do both vector search and call LLM. It also shows Text chunking pre-processor capbility in ingest pipeline.

author: Cloudera Inc.
specification_version: 1.0
prototype_version: 1.0
date: "2025-01-09"

environment_variables:
  CSS_CDP_TOKEN_KEY: 
    default: 'abcde'
    description: >-
      The CDP  token  key secret for the LLM API call, deployed in Cloudera AII
  CSS_CML_LLM_MODEL:
    default: 'meta/llama-3_1-8b-instruct'
    description: >-
      The  LLM  model id for  the LLM API call, deployed in Cloudera AI
  CSS_CML_LLM_ENDPOINT:
    default: 'caii-endpoint'
    description: >-
      The LLM model end point  deployed in Cloudera AI
  CSS_USER:
    default: admin
    descriptiom: >-
      The CSS databse user
  CSS_PASSWORD:
    default: Cloudera@Test4321
    description: >-
      The CSS database user password
  CSS_HOST:
    default: 'css-endpoint'
    description: >-
      Host where CSS is running
  CSS_PORT:
    default: '9200'
    description: >-
      Port where CSS service is listening
  CSS_SSL:
    default: 'False'
    description: >-
      Enable SSL while connecting to CSS
  DATA_FILE_PATH:
    default: './data'
    description: >-
      PDF files for loading it into the CSS
  CSS_EMBEDDING_OPENAI_MODEL:
    default: 'huggingface/sentence-transformers/all-mpnet-base-v2'
    description: >-
      Model id of the CML model running in CML inferecing engine
  CSS_EMBEDDING_DIMENSION:
    default: '768'
    description: >-
      Dimention of the vectors generated by the CML Model

runtimes:
  - editor: PBJ Workbench
    kernel: Python 3.10
    edition: Standard

tasks:

  - type: run_session
    name: Install Dependencies
    script: session-install-deps/install_dependencies.py
    short_summary: Install Dependencies
    kernel: python3
    cpu: 2
    memory: 10

  - type: create_job
    name: Load Data From PDF File
    entity_label: create_index_and_load_data
    script: css_load.py
    short_summary: Create job to load data into CSS. 
    long_summary: Create job to create index, model and pipelin. Load pdf files located by the DOC_PATH. 
    cpu: 2
    memory: 4
    environment:
      TASK_TYPE: CREATE/RUN_JOB

  - type: create_job
    name: Cleanup Index  pipeline and Model
    entity_label: cleanup_model_index_pipeline
    script: cleanup.py
    short_summary: Job to cleanup all the data. 
    long_summary: Delete Index, pipeline and Model created during the demo 
    cpu: 2
    memory: 4
    environment:
      TASK_TYPE: CREATE/RUN_JOB
    

  - type: start_application
    name: RAG search front end
    script: search_app.py
    subdomain: css-demo
    short_summary: Start the RAG Demo UI
    long_summary: Start the RAG Demo UI
    cpu: 2
    memory: 4
    gpu: 0
